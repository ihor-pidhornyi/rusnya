.input-wrapper {
  display: block;
  position: relative;

  & .suffix {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 3rem;
    color: #999999;
  }
}

.input {
  display: block;
  width: 100%;
  height: 34px;
  padding: 6px 12px;
  font-size: 14px;
  line-height: 1.42857143;
  color: #555;
  background-color: #fff;
  background-image: none;
  border: 1px solid #ccc;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
  -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
  -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;

  &.suffixed {
    padding-right: 3rem;
  }
}

.input:focus {
  border-color: #66afe9;
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(102, 175, 233, .6);
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(102, 175, 233, .6)
}

.input::-moz-placeholder {
  color: #999;
  opacity: 1
}

.input:-ms-input-placeholder,
.input::-webkit-input-placeholder {
  color: #999
}

.input::-ms-expand {
  background-color: transparent;
  border: 0
}

.input[disabled], .input[readonly], fieldset[disabled] .input {
  background-color: #eee;
  opacity: 1
}

.input[disabled], fieldset[disabled] .input {
  cursor: not-allowed
}

input[type=search] {
  -webkit-appearance: none
}

.input {
  -webkit-box-shadow: inset 0 1px 0 0 #f2f5f8;
  -moz-box-shadow: inset 0 1px 0 0 #f2f5f8;
  box-shadow: inset 0 1px 0 0 #f2f5f8;
  height: 35px;
  padding: 0.5em 1em;
  outline: none;
  border: 1px solid #c8c8c8;
}
.input:focus,
.input.active {
  border-color: #c8c8c8;
  -webkit-box-shadow: 0 0 0 #000;
  -moz-box-shadow: 0 0 0 #000;
  box-shadow: 0 0 0 #000;
}
label.input {
  line-height: 25px;
  color: #c8c8c8;
}
label.input.attached {
  color: #000;
}

:host.ng-invalid.ng-touched input {
  border: 1px solid #ff3c3c;
}


